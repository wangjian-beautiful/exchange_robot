# 生产环境配置

# 机器人 -数据源配置
mybatis.configuration.map-underscore-to-camel-case=true
spring.datasource.robot.jdbc-url=jdbc:mysql://bjs-db.cluster-cqvyvxlcgzwf.ap-northeast-1.rds.amazonaws.com:6401/robot_all?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&rewriteBatchedStatements=true&useSSL=false
spring.datasource.robot.username=bjsuser
spring.datasource.robot.password=UwcNPQrvLlD_

# exchange -数据源配置
spring.datasource.exchange.jdbc-url=jdbc:mysql://bjs-db.cluster-cqvyvxlcgzwf.ap-northeast-1.rds.amazonaws.com:6401/exchange?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&rewriteBatchedStatements=true&useSSL=false
spring.datasource.exchange.username=bjsuser
spring.datasource.exchange.password=UwcNPQrvLlD_
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# redis集群配置
redis_cluster_cluster_1_host = 172.16.69.223
redis_cluster_cluster_1_port = 6383
redis_cluster_cluster_2_host = 172.16.147.225
redis_cluster_cluster_2_port = 6384
redis_cluster_cluster_3_host = 172.16.78.109
redis_cluster_cluster_3_port = 6385
redis_cluster_cluster_4_host = 172.16.69.223
redis_cluster_cluster_4_port = 6386
redis_cluster_cluster_5_host = 172.16.147.225
redis_cluster_cluster_5_port = 6387
redis_cluster_cluster_6_host = 172.16.78.109
redis_cluster_cluster_6_port = 6388
redis_cluster_password = ge6qwi151

redis_SSSION_TIMEOUT = 1800
#\u6700\u5927\u8FDE\u63A5\u6570, \u9ED8\u8BA4500\u4E2A
redis_MAX_TOTAL = 500
#\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\u6570, \u9ED8\u8BA4100\u4E2A
redis_MAX_IDLE = 100
#redis-config-old--------------kline
redis.database=0  
redis.maxActive=300
redis.maxIdle=300
redis.testOnBorrow=true
redisExpire=3600
redis.maxWait=3000
base_cookie=localhost



################# rabbitmq ########
spring.rabbitmq.host=b-1adef058-2ca4-400c-9076-90430a7f2d79.mq.ap-northeast-1.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=admin
spring.rabbitmq.password=sJIjO123Zs1u?ipnJf

##连接到代理时用的虚拟主机
spring.rabbitmq.virtual-host=/
#连接到server的地址列表（以逗号分隔），先addresses后host
#spring.rabbitmq.addresses=
#请求心跳超时时间，0为不指定，如果不指定时间单位默认为妙
#spring.rabbitmq.requested-heartbeat=
#是否启用【发布确认】，默认false
spring.rabbitmq.publisher-confirms=false
#是否启用【发布返回】，默认false
spring.rabbitmq.publisher-returns=false
#连接超时时间，单位毫秒，0表示永不超时
spring.rabbitmq.connection-timeout=3000
########缓存cache：
# 缓存中保持的channel数量
spring.rabbitmq.cache.channel.size=20
##当缓存数量被设置时，从缓存中获取一个channel的超时时间，单位毫秒；如果为0，则总是创建一个新channel
spring.rabbitmq.cache.channel.checkout-timeout=2000
##缓存的channel数，只有是CONNECTION模式时生效
##spring.rabbitmq.cache.connection.size=20
##连接工厂缓存模式：channel 和 connection
#spring.rabbitmq.cache.connection.mode=channel
spring.rabbitmq.ssl.enabled=true
##############Listener：
##容器类型.simple或direct
spring.rabbitmq.listener.type=simple
##是否启动时自动启动容器
spring.rabbitmq.listener.simple.auto-startup=true
##表示消息确认方式，其有三种配置方式，分别是none、manual和auto；默认auto
spring.rabbitmq.listener.simple.acknowledge-mode=manual

#币安生产
binance.apiKey = eOytpFj435KnpWjbxwvqOlAIPoAfU9mK1mvjaY9yTBPj8CTjwlBez61jrRkQC0ih
binance.secretKey= qGDjRGlpOLXcIHhBwRnla9sC2yfP2H9xxTPObvun0PWVIBEXy0G21HypHQOHz3Tl
binance.baseUrl = https://api.binance.com

#抹茶生产
mexc.accessKey = mx09WZUSaAWIFXJ7ot
mexc.secretKey = aaebf5ee85c54f0cbefd00e86637b35f



sms.openapi.url=http://exchange-open-api:8218/open/api/sendSms
sms.openapi.token=e7a88f3cf705041d737203a62e5b17e2
