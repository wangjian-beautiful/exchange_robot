# 开发环境配置
# 机器人 -数据源配置
mybatis.configuration.map-underscore-to-camel-case=true
spring.datasource.robot.jdbc-url=jdbc:mysql://54.168.219.230:3306/robot_all?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true
spring.datasource.robot.username=root
spring.datasource.robot.password=1qa2ws3ed

# exchange -数据源配置
spring.datasource.exchange.jdbc-url=jdbc:mysql://54.168.219.230:3306/exchange?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true
spring.datasource.exchange.username=root
spring.datasource.exchange.password=1qa2ws3ed
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# redis集群配置
#redis_cluster_cluster_1_host = 10.0.15.73
#redis_cluster_cluster_1_port = 7001
#redis_cluster_cluster_2_host = 10.0.15.73
#redis_cluster_cluster_2_port = 7002
#redis_cluster_cluster_3_host = 10.0.15.73
#redis_cluster_cluster_3_port = 7003
#redis_cluster_cluster_4_host = 10.0.15.73
#redis_cluster_cluster_4_port = 7004
#redis_cluster_cluster_5_host = 10.0.15.73
#redis_cluster_cluster_5_port = 7005
#redis_cluster_cluster_6_host = 10.0.15.73
#redis_cluster_cluster_6_port = 7006
#redis_cluster_password = 123456789
#本地环境
redis_cluster_cluster_1_host = 18.179.108.83
redis_cluster_cluster_1_port = 7001
redis_cluster_cluster_2_host = 18.179.108.83
redis_cluster_cluster_2_port = 7002
redis_cluster_cluster_3_host = 18.179.108.83
redis_cluster_cluster_3_port = 7003
redis_cluster_cluster_4_host = 18.179.108.83
redis_cluster_cluster_4_port = 7004
redis_cluster_cluster_5_host = 18.179.108.83
redis_cluster_cluster_5_port = 7005
redis_cluster_cluster_6_host = 18.179.108.83
redis_cluster_cluster_6_port = 7006
redis_cluster_password = 123456789
redis_SSSION_TIMEOUT = 1800
#\u6700\u5927\u8FDE\u63A5\u6570, \u9ED8\u8BA4500\u4E2A
redis_MAX_TOTAL = 500
#\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\u6570, \u9ED8\u8BA4100\u4E2A
redis_MAX_IDLE = 100
#redis-config-old--------------kline
redis.database=0  
redis.maxActive=300
redis.maxIdle=300
redis.testOnBorrow=true
redisExpire=3600
redis.maxWait=3000
base_cookie=localhost



################# rabbitmq ########
spring.rabbitmq.host=b-3e93e915-80d1-41e6-ac8c-5153971ab5e6.mq.ap-northeast-1.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=admin
spring.rabbitmq.password=sJIjO123Zs1u?ipnJf
#我的私有MQ
#spring.rabbitmq.host=49.232.13.195
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

##连接到代理时用的虚拟主机
spring.rabbitmq.virtual-host=/
#连接到server的地址列表（以逗号分隔），先addresses后host
#spring.rabbitmq.addresses=
#请求心跳超时时间，0为不指定，如果不指定时间单位默认为妙
#spring.rabbitmq.requested-heartbeat=
#是否启用【发布确认】，默认false
spring.rabbitmq.publisher-confirms=false
#是否启用【发布返回】，默认false
spring.rabbitmq.publisher-returns=false
#连接超时时间，单位毫秒，0表示永不超时
spring.rabbitmq.connection-timeout=3000
########缓存cache：
# 缓存中保持的channel数量
spring.rabbitmq.cache.channel.size=20
##当缓存数量被设置时，从缓存中获取一个channel的超时时间，单位毫秒；如果为0，则总是创建一个新channel
spring.rabbitmq.cache.channel.checkout-timeout=2000
##缓存的channel数，只有是CONNECTION模式时生效
##spring.rabbitmq.cache.connection.size=20
##连接工厂缓存模式：channel 和 connection
#spring.rabbitmq.cache.connection.mode=channel
spring.rabbitmq.ssl.enabled=true
##############Listener：
##容器类型.simple或direct
spring.rabbitmq.listener.type=simple
##是否启动时自动启动容器
spring.rabbitmq.listener.simple.auto-startup=true
##表示消息确认方式，其有三种配置方式，分别是none、manual和auto；默认auto
spring.rabbitmq.listener.simple.acknowledge-mode=manual


#币安 --test
binance.apiKey = T3hbEDrT0ZlnBw6ic66KZ02c79bVrbI4F7gof0T0EMP8PLxW2199qF8sGj3tiDCl
binance.secretKey= hyDOTqINpcjbndTEWudo68LRGmfiTEfZlWDwDZRECXXz4cJnDuh11vjO1F3v4319
binance.baseUrl = https://testnet.binance.vision

#binance.apiKey = 9D3qVdhsmJxd9zy8I72fOq7nOz5FrBvmTIaGpXREHWYHMZ3pe9ucEuGkdYj8DEn4
#binance.secretKey= boRhT2jGkPATaDNrH1JsfqzuhJXMDQfCP31f3rBqoH6HLR8o0bLtzC8aoQIk4QaS
#binance.baseUrl = https://api.binance.com



#抹茶
mexc.accessKey = mx0GQgskFnvKXfvaDU
mexc.secretKey = 44d9d51b5da345ac97eb13b92a9c9e30


sms.openapi.url=http://exchange-open-api:8218/open/api/sendSms
sms.openapi.token=c58cda2615bd8bd47ca011f4a586ce18